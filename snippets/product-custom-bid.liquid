{% liquid
  assign current_date = 'now' | date: '%s'
  assign timer = product.metafields.custom.livestreaming.value.start_time | date: '%s'
  assign close_timer = product.metafields.custom.livestreaming.value.end_time | date: '%s'
 %}
<div class="my-[20px]">
    <div>
        <p class="text-[14px] uppercase text-[#9d9d9d]">Starting bid</p>
        <h3 class="text-[43px] neueSwift" id="bidAmount">{{ 100 | money_without_trailing_zeros }}</h3>
        <p class="text-[14px] text-[#9d9d9d]">Reserve price not met</p>
    </div>
    <div class="mt-[20px]">
        <form>
            <div class="flex gap-[14px] justify-between mb-[16px]">
                <div class="label-only-input relative w-full">
                    <input type="radio" name="num" value="5" class="bidNumbers peer absolute left-0 top-0 cursor-pointer opacity-0 text-[12px]" id="firstBid" {% if timer > current_date %}disabled{% endif %}> 
                    <label for="firstBid" class="relative select-none block p-[10px] min-w-9 cursor-pointer rounded-button border-text text-[12px] text-center peer-checked:border-scheme-text peer-[.sold-out]:line-through peer-[.unavailable]:line-through text-[#9d9d9d] peer-checked:text-black">£5</label>
                </div>
                <div class="lable-only-input relative w-full">
                    <input type="radio" name="num" value="10" class="bidNumbers peer absolute left-0 top-0 cursor-pointer opacity-0 text-[12px]" id="secondBid" {% if timer > current_date %}disabled{% endif %}>
                    <label for="secondBid" class="relative select-none block p-[10px] min-w-9 cursor-pointer rounded-button border-text text-[12px] text-center peer-checked:border-scheme-text peer-[.sold-out]:line-through peer-[.unavailable]:line-through text-[#9d9d9d] peer-checked:text-black">£10</label>
                </div>
                <div class="lable-only-input relative w-full">
                    <input type="radio" name="num" value="15" class="bidNumbers peer absolute left-0 top-0 cursor-pointer opacity-0 text-[12px]" id="thirdBid" {% if timer > current_date %}disabled{% endif %}>
                    <label for="thirdBid" class="relative select-none block p-[10px] min-w-9 cursor-pointer rounded-button border-text text-[12px] text-center peer-checked:border-scheme-text peer-[.sold-out]:line-through peer-[.unavailable]:line-through text-[#9d9d9d] peer-checked:text-black">£15</label>
                </div>
                <div class="lable-only-input relative w-full">
                    <input type="radio" name="num" value="20" class="bidNumbers peer absolute left-0 top-0 cursor-pointer opacity-0 text-[12px]" id="fourthBid" {% if timer > current_date %}disabled{% endif %}> 
                    <label for="fourthBid" class="relative select-none block p-[10px] min-w-9 cursor-pointer rounded-button border-text text-[12px] text-center peer-checked:border-scheme-text peer-[.sold-out]:line-through peer-[.unavailable]:line-through text-[#9d9d9d] peer-checked:text-black">£20</label>
                </div>
            </div>
            <input type="text" id="custom-num" placeholder="£5 or up" class="w-full border-solid border py-[10px] px-[12px] mb-[8px] border-[#9d9d9d]" {% if timer > current_date %}disabled{% endif %}>
            <div class="flex justify-between gap-[16px]">
                <button id="placeBid" class="border w-full border-black p-[10px]" {% if timer > current_date %}disabled{% endif %}>Place bid</button>
                <button id="maxBid" class="border w-full border-black p-[10px] bg-black text-white" {% if timer > current_date %}disabled{% endif %}>Set max bid</button>
            </div>
            
            <script>
                const radioInputs = document.querySelectorAll('bidNumbers');
                const customInput = document.getElementById('custom-num');
                
                customInput.addEventListener('input', updateRadioValues);

                function updateRadioValues() {
                    const customValue = parseInt(customInput.value);
                    if (customValue > radioInputs[radioInputs.length - 1].value) {
                        const newValues = [];
                        let currentValue = customValue;
                        while (newValues.length < radioInputs.length) {
                        newValues.push(currentValue);
                        currentValue -= 5;
                        }
                        newValues.reverse();
                        radioInputs.forEach((input, index) => {
                        input.value = newValues[index];
                        });
                    }
                }
            </script>
        </form>
    </div>
</div>