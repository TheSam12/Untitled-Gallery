{%- liquid
  assign section_color = section.settings.color_scheme
  assign heading_size_class = section.settings.heading_size
  assign pagination = section.settings.pagination
  assign collection = section.settings.collection

  if section.settings.autoplay
    assign no_border_on_slide = true
  endif
-%}

<section
  class="relative border-b-gridline border-gridline-color bg-scheme-background text-scheme-text px-[10px]"
  data-color-scheme="{{ section_color }}"
>
  <div
    x-data="
      Theme_Slideshow({
        autoplay: {{ section.settings.autoplay }},
        autoplayInterval: {{ section.settings.autoplay_interval }},
        loop: {{ section.settings.loop }}, 
      })
    "
    class="splide"
  >
    {% if section.settings.autoplay %}
      <button
        class="absolute left-0 top-0 z-10 p-2"
        type="button"
        aria-label="{{ 'sections.slideshow.pause_slideshow' | t }}"
        data-play="{{ 'sections.slideshow.rotate_slideshow' | t }}"
        data-pause="{{ 'sections.slideshow.pause_slideshow' | t }}"
      >
        <span class="relative flex items-center justify-center">
          <span
            x-show="playing"
            style="display: none;"
            class="inline-block w-6"
          >
            {%- render 'icon-pause' -%}
          </span>
          <span x-show="!playing" class="inline-block w-6">
            {%- render 'icon-play' -%}
          </span>
        </span>
      </button>
    {% endif %}

    <div class="splide__track h-[50vh] lg:h-auto">
      <ul class="splide__list lg:left-[3.5%] relative main__slideshow">
        {% for product in collection.products %}
          {%- liquid
            assign height = section.settings.height

            unless forloop.first
              assign height = 'full_height'
            endunless

            assign loading = 'lazy'

            if forloop.first and section.index <= 3
              assign loading = 'eager'
            endif

            assign content_position = section.settings.content_position
            assign content_width_desktop = section.settings.content_width_desktop
            assign color_scheme = section.settings.color_scheme
            assign scheme_text_color_only = section.settings.scheme_text_color_only
            assign image = product.metafields.custom.livestreaming.value.main_slideshow_image
            assign timer = product.metafields.custom.livestreaming.value.start_time | date: '%s'
            assign upcoming_time = product.metafields.custom.livestreaming.value.start_time
            assign current_time = 'now' | date: '%s'
            assign title = product.metafields.custom.livestreaming.value.title
            assign text = product.metafields.custom.artist.value.name
            assign desc = product.metafields.custom.livestreaming.value.description
            assign url = product.url
          -%}
          {% if image != null %}
            {% if timer < current_time %}
              <li
                class="splide__slide {% unless forloop.first %} [.splide:not(.is-active)_&]:hidden {% endunless %}"
                data-index="{{ forloop.index0 }}"
              >
                {{ url }}
                  {%-
                    render 'image-with-text-overlay',
                    height: height,
                    image: image,
                    no_border: no_border_on_slide,
                    content_position: content_position,
                    heading_size_class: heading_size_class,
                    section_color_scheme: section_color,
                    color_scheme: color_scheme,
                    scheme_text_color_only: scheme_text_color_only,
                    content_width_desktop: content_width_desktop,
                    timer: timer,
                    upcoming_time: upcoming_time,
                    current_time: current_time,
                    title: title,
                    text: text,
                    desc: desc,
                    loading: loading,
                    product: product,
                    url: url,
                  -%}
              </li>
            {% endif %}
          {% endif %}
        {% endfor %}
        {% for product in collection.products %}
          {%- liquid
            assign height = section.settings.height

            unless forloop.first
              assign height = 'full_height'
            endunless

            assign loading = 'lazy'

            if forloop.first and section.index <= 3
              assign loading = 'eager'
            endif

            assign content_position = section.settings.content_position
            assign content_width_desktop = section.settings.content_width_desktop
            assign color_scheme = section.settings.color_scheme
            assign scheme_text_color_only = section.settings.scheme_text_color_only
            assign image = product.metafields.custom.livestreaming.value.main_slideshow_image
            assign timer = product.metafields.custom.livestreaming.value.start_time | date: '%s'
            assign upcoming_time = product.metafields.custom.livestreaming.value.start_time
            assign current_time = 'now' | date: '%s'
            assign title = product.metafields.custom.livestreaming.value.title
            assign text = product.metafields.custom.artist.value.name
            assign desc = product.metafields.custom.livestreaming.value.description
          -%}
          {% if image != null %}
            {% if timer > current_time %}
              <li
                class="splide__slide {% unless forloop.first %} [.splide:not(.is-active)_&]:hidden {% endunless %}"
                data-index="{{ forloop.index0 }}"
              >
                {%-
                  render 'image-with-text-overlay',
                  height: height,
                  image: image,
                  no_border: no_border_on_slide,
                  content_position: content_position,
                  heading_size_class: heading_size_class,
                  section_color_scheme: section_color,
                  color_scheme: color_scheme,
                  scheme_text_color_only: scheme_text_color_only,
                  content_width_desktop: content_width_desktop,
                  timer: timer,
                  upcoming_time: upcoming_time,
                  current_time: current_time,
                  title: title,
                  text: text,
                  desc: desc,
                  loading: loading,
                -%}
              </li>
            {% endif %}
          {% endif %}
        {% endfor %}
      </ul>
    </div>
    {% if section.settings.autoplay %}
      <div class="bg-gridline-color/30">
        <div
          style="width: 0%;"
          :style="{ width : `${rate * 100}%` }"
          class="progress-bar h-gridline transform-gpu bg-gridline-color will-change-[width]"
        ></div>
      </div>
    {% endif %}
    {% if collection.products.size > 1 %} 
      <div
        class="mx-1 {% if pagination %}grid{% endif %} grid-cols-[minmax(0,_1fr)_auto] gap-2 no-js:hidden lg:mx-4"
        {% if pagination %}
        x-data="
          {
            paginationIsWrapped: false,
            checkIfWrapped() {
              this.paginationIsWrapped = hasWrappedChildren(this.$refs.pagination)
            }
          }
        "
        x-init="checkIfWrapped"
        @resize.window.debounce.250="checkIfWrapped"
        {% endif %}
      >
        {% if pagination %}
          <ul x-ref="pagination" class="splide__pagination"></ul>
        {% endif %}
        <div
          class="flex splide__arrows col-end-last items-center {% if pagination %}justify-end{% else %}justify-center{% endif %} gap-[15px] mt-[24px] lg:mt-[30px] text-scheme-text"
          {% if pagination %}:class="{ 'items-start pt-0.5' : paginationIsWrapped, 'items-center' : !paginationIsWrapped }"{% endif %}
        >
          <button class="splide__arrow splide__arrow--prev">
            <span class="sr-only">
              {{- 'sections.slideshow.previous_slide' | t -}}
            </span>
            <span class="block">
              {% render 'icon-arrow-left-slideshow' %}
            </span>
          </button>
          <button class="splide__arrow splide__arrow--next">
            <span class="sr-only">
              {{- 'sections.slideshow.next_slide' | t -}}
            </span>
            <span class="block">
              {% render 'icon-arrow-right-slideshow' %}
            </span>
          </button>
        </div>
      </div>
    {% endif %}
  </div>
  {% style %}
    {% if pagination != true %}
      #splide01 .splide__pagination{
        display:none;
      }
    {% endif %}
  {% endstyle %}
</section>
{% comment %} <div x-data="{ products: [] }" x-effect="fetchProduct($data)">
  <template x-for="(product, index) in products" :key="index">
    <div>
      <p>ID: <span x-text="product.id"></span></p>
      <p>Fecha de creaci√≥n: <span x-text="product.title"></span></p> 
      <img x-bind:src="product.images?.edges[0]?.node?.source" height="100" width="100">
    </div>
  </template>
</div>
<script>
  async function fetchProduct(data) {
    const shopifyProductRecord= await api.shopifyProduct.findMany({ first: 5, select: { 
        images: {
          edges: {
            node: {
              id: true,
              source: true,
            },
          },
        },
        id: true,
        title: true,
      } 
    }); 
    data.products = shopifyProductRecord;
    return data.products;
  }
</script> {% endcomment %}

{% unless request.design_mode %}
  <script src="{{ 'splide.bundle.min.js' | asset_url }}" type="module"></script>
  <script src="{{ 'slideshows.js' | asset_url }}" type="module"></script>
{% endunless %}

{{ 'modules-slideshow.bundle.css' | asset_url | stylesheet_tag }}
<script src="{{ 'countdown-timer.js' | asset_url }}" type="module"></script>

{% schema %}
{
  "name": "Slideshow",
  "disabled_on": {
    "groups": [
      "header",
      "footer",
      "aside"
    ]
  },
  "settings": [
    {
      "type": "select",
      "id": "height",
      "label": "Height",
      "options": [
        {
          "value": "natural",
          "label": "Adapt to first slide"
        },
        {
          "value": "full_screen",
          "label": "Full screen"
        }
      ],
      "default": "natural"
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Heading size",
      "min": 30,
      "max": 40,
      "default": 32
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Main Slideshow Collection"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-rotate slides",
      "info": "This will show a play and pause button and disable dragging."
    },
    {
      "type": "select",
      "id": "autoplay_interval",
      "label": "Change slides every",
      "options": [
        {
          "value": "5000",
          "label": "5 Seconds"
        },
        {
          "value": "6000",
          "label": "6 Seconds"
        },
        {
          "value": "7000",
          "label": "7 Seconds"
        },
        {
          "value": "8000",
          "label": "8 Seconds"
        },
        {
          "value": "9000",
          "label": "9 Seconds"
        },
        {
          "value": "10000",
          "label": "10 Seconds"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "loop",
      "label": "Slider Loop",
      "default": false
    },
    {
      "type": "header",
      "content": "Color"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "default": "scheme1",
      "label": "Color scheme"
    },
    {
      "type": "checkbox",
      "id": "pagination",
      "label": "Show Pagination"
    },
    {
      "type": "select",
      "id": "content_position",
      "label": "Position",
      "options": [
        {
          "value": "justify-start items-start text-left",
          "label": "Top left"
        },
        {
          "value": "justify-center items-start text-center",
          "label": "Top center"
        },
        {
          "value": "justify-end items-start text-right",
          "label": "Top right"
        },
        {
          "value": "justify-start items-center text-left",
          "label": "Left"
        },
        {
          "value": "justify-center items-center text-center",
          "label": "Center"
        },
        {
          "value": "justify-end items-center text-right",
          "label": "Right"
        },
        {
          "value": "justify-start items-end text-left",
          "label": "Bottom left"
        },
        {
          "value": "justify-center items-end text-center",
          "label": "Bottom center"
        },
        {
          "value": "justify-end items-end text-right",
          "label": "Bottom right"
        }
      ],
      "default": "justify-center items-center text-center"
    },
    {
      "type": "select",
      "id": "content_width_desktop",
      "label": "Width on desktop",
      "default": "lg:w-2/3",
      "options": [
        {
          "value": "lg:w-1/3",
          "label": "One third"
        },
        {
          "value": "lg:w-1/2",
          "label": "One half"
        },
        {
          "value": "lg:w-2/3",
          "label": "Two thirds"
        },
        {
          "value": "lg:w-full",
          "label": "Full width"
        }
      ]
    },
    {
      "id": "scheme_text_color_only",
      "type": "checkbox",
      "label": "Apply text color only",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "Slideshow"
    }
  ]
}
{% endschema %}
